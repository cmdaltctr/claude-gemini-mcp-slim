name: Release Please

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  actions: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          skip-labeling: true

      - name: Update README version badge
        if: ${{ steps.release.outputs.release_created }}
        run: |
          # Update version badge in README.md
          sed -i "s/version-.*-blue.svg/version-${{ steps.release.outputs.version }}-blue.svg/" README.md
          
          # Update changelog section in README.md with latest changes
          # Extract the latest changelog entry from CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            # Get the latest changelog entry (between first two ## headers)
            LATEST_CHANGELOG=$(sed -n '/^## \[/,/^## \[/p' CHANGELOG.md | head -n -1 | tail -n +2)
            
            # Replace the changelog section in README.md
            # Find the changelog section and replace it
            sed -i '/^## Changelog$/,/^## /{
              /^## Changelog$/{
                a\
                \
                '$LATEST_CHANGELOG'
                \
              }
              /^## /!d
            }' README.md
          fi
          
          # Commit changes back to the repository
          git config user.name "release-please[bot]"
          git config user.email "release-please[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore: update README version badge and changelog to v${{ steps.release.outputs.version }}" || echo "No changes to commit"
          git push origin main

  publish-assets:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload to PyPI (if configured)
        if: env.PYPI_TOKEN != ''
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/* -u __token__ -p $PYPI_TOKEN
        continue-on-error: true

      - name: Create GitHub Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets-${{ needs.release-please.outputs.tag_name }}
          path: |
            dist/
            docs/
            *.md
            pyproject.toml
